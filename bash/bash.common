# My machines
mine=('wltr-*' 'sygps065' 'sydmacd0dv')

# Git helper functions
git_parse_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

git_check_changes() {
  git status -s 2> /dev/null | tail -n 1 | sed -e $'s/.*/\x1b[1;35m/'
}

git_list_stash() {
  count=$(git stash list 2> /dev/null | wc -l)
  if [ $count -gt 0 ]; then
    echo $count | sed -e 's/\(.*\)/ (\1 stashed)/'
  fi
}

git_user_email() {
  if [ -n "$(git branch 2> /dev/null)" ]; then
    echo " <$(git config -l 2> /dev/null | grep user.email | tail -n 1 | sed -e 's/.*=.*@\(.*\)$/\1/')>"
  fi
}

git_user_name() {
  if [ -n "$(git branch 2> /dev/null)" ]; then
    git config -l 2> /dev/null | grep user.name | tail -n 1 | sed -e 's/.*=\(.*\)$/\1/'
  fi
}

# Check if it's my machine
is_mine() {
  found=0
  for i in ${mine[@]}
  do
    if [[ $(hostname -s) == $i ]]; then
      found=1
      break
    fi
  done

  if [ $found -eq 1 ]; then
    echo -e '\x1b[0;33m'
  else
    echo -e '\x1b[1;31m'
  fi
}

# Terminal setup
update_title() {
  if [[ $1 != 'update_title' && $1 != 'exit' ]]; then
    fallback=${1:-$(ps -o comm $$ | tail -n 1)}
    cmd=$(echo $fallback | awk -F' ' '{print $1}')
    printf '\033k%s\033\\' $cmd
  fi
}

shopt -s histappend
prompt_cmd='history -a; history -n;'

case $TERM in
  xterm)
    export TERM=xterm-256color
    ;;
  screen*)
    prompt_cmd=$prompt_cmd' update_title'
    trap 'update_title "$BASH_COMMAND"' DEBUG
    ;;
esac

export PROMPT_COMMAND=$prompt_cmd

# Shell setup
has_unicode() {
  if [[ $(locale charmap) == 'UTF-8' ]]; then
    echo -e '\x1b[0;35m\xe2\x9d\xaf '
  fi
}

export PS1='$(has_unicode)\[\e[0;32m\]\u\[\e[0m\]@$(is_mine)\h\[\e[0m\] \[\e[34m\]\W\[\e[0;37m\] $(git_check_changes)$(git_parse_branch)\[\e[0;36m\]$(git_list_stash)$(git_user_email)\[\e[0m\]\n\#\$ '

# Ignore CTRL-D
export IGNOREEOF=3

# Editor
export EDITOR='nvim'

# Aliases
alias vi='nvim'
alias ll='ls -l'
alias la='ls -Al'
alias diff='colordiff'
alias grep='grep --color=auto'
alias g..='[ ! -z `git rev-parse --show-toplevel` ] && cd `git rev-parse --show-toplevel || pwd`'

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
